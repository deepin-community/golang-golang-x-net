From 2cf91533d1d89ee4f948091467e810e23b89e3f7 Mon Sep 17 00:00:00 2001
From: hudeng <hudeng@deepin.org>
Date: Mon, 16 Dec 2024 02:53:32 +0000
Subject: [PATCH] feat: add sw support

---
 internal/socket/cmsghdr_linux_64bit.go |  2 +-
 internal/socket/iovec_64bit.go         |  2 +-
 internal/socket/msghdr_linux_64bit.go  |  2 +-
 internal/socket/sys_linux_sw64.go      | 12 +++++
 internal/socket/zsys_linux_sw64.go     | 39 ++++++++++++++
 ipv4/zsys_linux_sw64.go                | 75 ++++++++++++++++++++++++++
 ipv6/zsys_linux_sw64.go                | 75 ++++++++++++++++++++++++++
 7 files changed, 204 insertions(+), 3 deletions(-)
 create mode 100644 internal/socket/sys_linux_sw64.go
 create mode 100644 internal/socket/zsys_linux_sw64.go
 create mode 100644 ipv4/zsys_linux_sw64.go
 create mode 100644 ipv6/zsys_linux_sw64.go

diff --git a/internal/socket/cmsghdr_linux_64bit.go b/internal/socket/cmsghdr_linux_64bit.go
index 3ca0d3a..225c46d 100644
--- a/internal/socket/cmsghdr_linux_64bit.go
+++ b/internal/socket/cmsghdr_linux_64bit.go
@@ -2,7 +2,7 @@
 // Use of this source code is governed by a BSD-style
 // license that can be found in the LICENSE file.
 
-//go:build (arm64 || amd64 || loong64 || ppc64 || ppc64le || mips64 || mips64le || riscv64 || s390x) && linux
+//go:build (arm64 || amd64 || loong64 || ppc64 || ppc64le || mips64 || mips64le || riscv64 || s390x || sw64) && linux
 
 package socket
 
diff --git a/internal/socket/iovec_64bit.go b/internal/socket/iovec_64bit.go
index 26470c1..3337a62 100644
--- a/internal/socket/iovec_64bit.go
+++ b/internal/socket/iovec_64bit.go
@@ -2,7 +2,7 @@
 // Use of this source code is governed by a BSD-style
 // license that can be found in the LICENSE file.
 
-//go:build (arm64 || amd64 || loong64 || ppc64 || ppc64le || mips64 || mips64le || riscv64 || s390x) && (aix || darwin || dragonfly || freebsd || linux || netbsd || openbsd || zos)
+//go:build (arm64 || amd64 || loong64 || ppc64 || ppc64le || mips64 || mips64le || riscv64 || s390x || sw64) && (aix || darwin || dragonfly || freebsd || linux || netbsd || openbsd || zos)
 
 package socket
 
diff --git a/internal/socket/msghdr_linux_64bit.go b/internal/socket/msghdr_linux_64bit.go
index 5af9ddd..a46999b 100644
--- a/internal/socket/msghdr_linux_64bit.go
+++ b/internal/socket/msghdr_linux_64bit.go
@@ -2,7 +2,7 @@
 // Use of this source code is governed by a BSD-style
 // license that can be found in the LICENSE file.
 
-//go:build (arm64 || amd64 || loong64 || ppc64 || ppc64le || mips64 || mips64le || riscv64 || s390x) && linux
+//go:build (arm64 || amd64 || loong64 || ppc64 || ppc64le || mips64 || mips64le || riscv64 || s390x || sw64) && linux
 
 package socket
 
diff --git a/internal/socket/sys_linux_sw64.go b/internal/socket/sys_linux_sw64.go
new file mode 100644
index 0000000..0269c31
--- /dev/null
+++ b/internal/socket/sys_linux_sw64.go
@@ -0,0 +1,12 @@
+// Copyright 2017 The Go Authors. All rights reserved.
+// Use of this source code is governed by a BSD-style
+// license that can be found in the LICENSE file.
+
+//go:build (sw64) && linux
+
+package socket
+
+const (
+	sysRECVMMSG = 0x1df
+	sysSENDMMSG = 0x1f7
+)
diff --git a/internal/socket/zsys_linux_sw64.go b/internal/socket/zsys_linux_sw64.go
new file mode 100644
index 0000000..e59af79
--- /dev/null
+++ b/internal/socket/zsys_linux_sw64.go
@@ -0,0 +1,39 @@
+// Code generated by cmd/cgo -godefs; DO NOT EDIT.
+// cgo -godefs defs_linux.go
+
+//go:build (sw64) && linux
+
+package socket
+
+type iovec struct {
+	Base	*byte
+	Len	uint64
+}
+
+type msghdr struct {
+	Name		*byte
+	Namelen		uint32
+	Iov		*iovec
+	Iovlen		uint64
+	Control		*byte
+	Controllen	uint64
+	Flags		int32
+	Pad_cgo_0	[4]byte
+}
+
+type mmsghdr struct {
+	Hdr		msghdr
+	Len		uint32
+	Pad_cgo_0	[4]byte
+}
+
+type cmsghdr struct {
+	Len	uint64
+	Level	int32
+	Type	int32
+}
+
+const (
+	sizeofIovec	= 0x10
+	sizeofMsghdr	= 0x38
+)
diff --git a/ipv4/zsys_linux_sw64.go b/ipv4/zsys_linux_sw64.go
new file mode 100644
index 0000000..e7507fe
--- /dev/null
+++ b/ipv4/zsys_linux_sw64.go
@@ -0,0 +1,75 @@
+// Code generated by cmd/cgo -godefs; DO NOT EDIT.
+// cgo -godefs defs_linux.go
+
+//go:build (sw64) && linux
+
+package ipv4
+
+const (
+	sizeofKernelSockaddrStorage	= 0x80
+	sizeofSockaddrInet		= 0x10
+	sizeofInetPktinfo		= 0xc
+	sizeofSockExtendedErr		= 0x10
+
+	sizeofIPMreq		= 0x8
+	sizeofIPMreqSource	= 0xc
+	sizeofGroupReq		= 0x88
+	sizeofGroupSourceReq	= 0x108
+
+	sizeofICMPFilter	= 0x4
+)
+
+type kernelSockaddrStorage struct {
+	Anon0 [128]byte
+}
+
+type sockaddrInet struct {
+	Family	uint16
+	Port	uint16
+	Addr	[4]byte /* in_addr */
+	X__pad	[8]uint8
+}
+
+type inetPktinfo struct {
+	Ifindex		int32
+	Spec_dst	[4]byte /* in_addr */
+	Addr		[4]byte /* in_addr */
+}
+
+type sockExtendedErr struct {
+	Errno	uint32
+	Origin	uint8
+	Type	uint8
+	Code	uint8
+	Pad	uint8
+	Info	uint32
+	Data	uint32
+}
+
+type ipMreq struct {
+	Multiaddr	[4]byte /* in_addr */
+	Interface	[4]byte /* in_addr */
+}
+
+type ipMreqSource struct {
+	Multiaddr	uint32
+	Interface	uint32
+	Sourceaddr	uint32
+}
+
+type groupReq struct {
+	Interface	uint32
+	Pad_cgo_0	[4]byte
+	Group		kernelSockaddrStorage
+}
+
+type groupSourceReq struct {
+	Interface	uint32
+	Pad_cgo_0	[4]byte
+	Group		kernelSockaddrStorage
+	Source		kernelSockaddrStorage
+}
+
+type icmpFilter struct {
+	Data uint32
+}
diff --git a/ipv6/zsys_linux_sw64.go b/ipv6/zsys_linux_sw64.go
new file mode 100644
index 0000000..84c1aab
--- /dev/null
+++ b/ipv6/zsys_linux_sw64.go
@@ -0,0 +1,75 @@
+// Code generated by cmd/cgo -godefs; DO NOT EDIT.
+// cgo -godefs defs_linux.go
+
+//go:build (sw64) && linux
+
+package ipv6
+
+const (
+	sizeofKernelSockaddrStorage	= 0x80
+	sizeofSockaddrInet6		= 0x1c
+	sizeofInet6Pktinfo		= 0x14
+	sizeofIPv6Mtuinfo		= 0x20
+	sizeofIPv6FlowlabelReq		= 0x20
+
+	sizeofIPv6Mreq		= 0x14
+	sizeofGroupReq		= 0x88
+	sizeofGroupSourceReq	= 0x108
+
+	sizeofICMPv6Filter	= 0x20
+)
+
+type kernelSockaddrStorage struct {
+	Anon0 [128]byte
+}
+
+type sockaddrInet6 struct {
+	Family		uint16
+	Port		uint16
+	Flowinfo	uint32
+	Addr		[16]byte /* in6_addr */
+	Scope_id	uint32
+}
+
+type inet6Pktinfo struct {
+	Addr	[16]byte /* in6_addr */
+	Ifindex	int32
+}
+
+type ipv6Mtuinfo struct {
+	Addr	sockaddrInet6
+	Mtu	uint32
+}
+
+type ipv6FlowlabelReq struct {
+	Dst		[16]byte /* in6_addr */
+	Label		uint32
+	Action		uint8
+	Share		uint8
+	Flags		uint16
+	Expires		uint16
+	Linger		uint16
+	X__flr_pad	uint32
+}
+
+type ipv6Mreq struct {
+	Multiaddr	[16]byte /* in6_addr */
+	Ifindex		int32
+}
+
+type groupReq struct {
+	Interface	uint32
+	Pad_cgo_0	[4]byte
+	Group		kernelSockaddrStorage
+}
+
+type groupSourceReq struct {
+	Interface	uint32
+	Pad_cgo_0	[4]byte
+	Group		kernelSockaddrStorage
+	Source		kernelSockaddrStorage
+}
+
+type icmpv6Filter struct {
+	Data [8]uint32
+}
-- 
2.33.0

